export class CodeSnippet {
    /** @type {Array<CodeSnippet>} */
    static "__#2@#snippetStack": Array<CodeSnippet>;
    /**
     * ```plain
     * 获取当前代码片段
     * ```
     *
     * @type {CodeSnippet?}
     */
    static get currentSnippet(): CodeSnippet;
    /**
     * ```plain
     * 压入一个代码片段作为当前代码片段
     * ```
     *
     * @param {CodeSnippet} snippet
     */
    static pushSnippet(snippet: CodeSnippet): void;
    /**
     * ```plain
     * 弹出当前代码片段
     * ```
     *
     * @returns {CodeSnippet}
     */
    static popSnippet(): CodeSnippet;
    /**
     * ```plain
     * 构造一个代码片段对象
     *
     * 通过 `erroff` 指定在发生错误时，错误信息指出的行与实际代码行的偏移量
     * ```
     * @param {string} code
     * @param {number} erroff
     */
    constructor(code: string, erroff?: number);
    /** @type {string} */
    get code(): string;
    /** @type {Array<string>} */
    get lines(): string[];
    /**
     * ```plain
     * 给定错误行号来获取错误代码片段
     * ```
     *
     * @param {number} lineno
     * @returns {string}
     */
    viewCode(lineno: number): string;
    #private;
}
export class ErrorReporter {
    static "__#3@#topAlert": any;
    static "__#3@#errorLineNoPatterns": RegExp[];
    static "__#3@#findLineNo": (line: any) => number;
    /**
     * ```plain
     * 向用户报告错误信息
     * ```
     *
     * @param {Error} error
     * @param {string} title
     */
    static reportError(error: Error, title?: string): void;
    /**
     * ```plain
     * 构造一个错误报告对象
     * 以此来保存错误相关信息
     * ```
     *
     * @param {Error} error
     * @param {CodeSnippet?} snippet
     */
    constructor(error: Error, snippet?: CodeSnippet | null);
    get message(): string;
    get stack(): string;
    viewCode(): string;
    /**
     * ```plain
     * 向用户报告错误信息
     * ```
     *
     * @param {string} title
     * @returns {string}
     */
    report(title: string): string;
    #private;
}
export class ErrorManager {
    /** @type {WeakMap<Object, ErrorReporter>} */
    static "__#4@#errorReporters": WeakMap<any, ErrorReporter>;
    /**
     * ```plain
     * 设置错误报告器
     *
     * 在报告错误时可以从此处获取错误报告器来直接报告错误
     * ```
     *
     * @param {Object} obj
     * @param {ErrorReporter?} reporter
     */
    static setErrorReporter(obj: any, reporter?: ErrorReporter | null): void;
    /**
     * ```plain
     * 获取设置的错误报告器
     * ```
     *
     * @param {Object} obj
     * @returns {ErrorReporter?}
     */
    static getErrorReporter(obj: any): ErrorReporter | null;
}
